#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

// OS設定を日本語キーボードのまま使用するための変換定義

#define JP_DQUOTE       AT                // "
#define JP_AMPERSAND    CARET             // &
#define JP_QUOTE        AMPERSAND         // '
#define JP_EQUAL        UNDER             // =
#define JP_CARET        EQUAL             // ^
#define JP_YEN          0x89              // ¥
#define JP_PLUS         COLON             // +
#define JP_TILDE        PLUS              // ~
#define JP_PIPE         LS(0x89)          // |
#define JP_AT           LEFT_BRACKET      // @
#define JP_COLON        SINGLE_QUOTE      // :
#define JP_ASTERISK     DOUBLE_QUOTES     // *
#define JP_BACKQUOTE    LEFT_BRACE        // `
#define JP_UNDERSCORE   LS(0x87)          // _
#define JP_LBRACKET     RIGHT_BRACKET     // [
#define JP_RBRACKET     BACKSLASH         // ]
#define JP_LPAREN       ASTERISK          // (
#define JP_RPAREN       LEFT_PARENTHESIS  // )
#define JP_LBRACE       RIGHT_BRACE       // {
#define JP_RBRACE       PIPE              // }
#define JP_KANA         LANGUAGE_1        // かな
#define JP_EISU         LANGUAGE_2        // 英数
#define JP_HANZEN       GRAVE             // 半角/全角

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        comb1 {
            bindings = <&kp TAB>;
            key-positions = <12 13>;
        };

        comb2 {
            bindings = <&kp LS(ESCAPE)>;
            key-positions = <0 1>;
        };

        comb3 {
            bindings = <&kp CAPSLOCK>;
            key-positions = <22 23>;
        };

        comb4 {
            bindings = <&kp BACKSPACE>;
            key-positions = <9 8>;
        };

        Lcrick {
            bindings = <&mkp MB1>;
            key-positions = <18 19>;
        };

        Rcrick {
            bindings = <&mkp MB2>;
            key-positions = <19 20>;
        };

        Mcrick {
            bindings = <&mkp MB3>;
            key-positions = <19 20 18>;
        };

        at {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <30 31>;
        };

        scrool {
            bindings = <&lt 1 LCTRL>;
            key-positions = <18 20>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q                 &kp W    &kp E             &kp R         &kp T                                                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A                 &kp S    &kp D             &kp F         &kp G        &to 6                 &kp MINUS                 &kp H        &kp J  &kp K      &kp L       &lt 5 SINGLE_QUOTE
&mt LEFT_SHIFT Z      &kp X    &kp C             &kp V         &kp B        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS     &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&mt LEFT_SHIFT LCTRL  &kp TAB  &kp LEFT_CONTROL  &kp LEFT_GUI  &lt 1 SPACE  &mt LCTRL CAPSLOCK    &mt LEFT_SHIFT BACKSPACE  &lt 2 ENTER                                &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp N1           &kp N2       &kp N3        &kp N4        &kp N5                                             &kp N6         &kp N7        &kp N8                &kp N9                 &kp N0
&kp EXCLAMATION  &kp AT_SIGN  &kp LG(TAB)   &kp DOLLAR    &kp PERCENT   &to 0             &kp INT_MUHENKAN   &kp AMPERSAND  &kp SQT       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ENTER
&kp PLUS         &kp MINUS    &kp ASTERISK  &kp SLASH     &kp EQUAL     &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp TILDE      &kp QUESTION  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp QUESTION
&bt BT_PRV       &bt BT_NXT   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR_ALL    &kp MINUS          &kp COMMA                                                                 &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        NUM {
            bindings = <
&kp F1       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp F5                                                &kp Y          &kp U          &kp I           &kp O            &kp P
&kp AT_SIGN  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp COLON   &kp N1          &kp INT_KATAKANAHIRAGANA  &kp LEFT       &kp DELETE     &kp BACKSPACE   &kp LS(SEMI)     &kp LS(APOS)
&kp Z        &kp N7        &kp N8        &kp N9        &kp B       &kp LEFT_BRACE  &kp RIGHT_BRACE           &kp LC(SPACE)  &kp RG(SPACE)  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp SLASH
&kp RSHIFT   &kp TAB       &kp LCTRL     &kp RGUI      &kp PERIOD  &kp N0          &mt LEFT_SHIFT BACKSPACE  &lt 2 ENTER                                                    &kp JP_UNDERSCORE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        ARROW {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                        &kp Y        &kp U  &kp I      &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        MOUSE {
            bindings = <
&kp Q             &kp W    &kp E             &kp R         &kp T                                  &kp Y        &kp U  &kp I     &kp O     &kp P
&kp A             &kp S    &kp D             &kp F         &kp G      &kp N1     &kp N2           &kp H        &kp J  &kp K     &kp L     &lt 5 SINGLE_QUOTE
&mt LEFT_SHIFT Z  &kp X    &kp C             &kp V         &kp B      &kp N3     &kp N4           &kp N        &kp M  &mkp MB1  &mkp MB2  &kp SLASH
&mt LCTRL ESCAPE  &kp TAB  &kp LEFT_CONTROL  &kp LEFT_GUI  &kp SPACE  &kp LCTRL  &lt 2 BACKSPACE  &lt 2 ENTER                             &kp LEFT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        arrow {
            bindings = <
&kp Q       &kp W      &kp E     &kp R     &kp T                          &kp Y     &kp U     &kp UP     &kp O       &kp P
&kp A       &kp S      &kp D     &kp F     &kp G        &kp N1  &kp N2    &kp H     &kp LEFT  &kp DOWN   &kp RIGHT   &kp ENTER
&kp Z       &kp X      &kp C     &kp V     &kp B        &kp N3  &kp N4    &kp N     &kp M     &kp COMMA  &kp PERIOD  &kp SLASH
&kp RSHIFT  &kp LCTRL  &kp LGUI  &kp LALT  &lt 1 SPACE  &kp N5  &mkp MB4  &mkp MB5                                   &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        GAME {
            bindings = <
&kp ESC         &kp Q      &kp W     &kp E     &kp T                     &kp Y        &kp U  &kp I      &kp O       &kp P
&kp TAB         &kp A      &kp S     &kp D     &kp G  &kp N1     &kp N2  &kp H        &kp J  &kp K      &kp L       &kp ENTER
&kp LEFT_SHIFT  &kp X      &kp C     &kp V     &kp B  &kp N3     &kp N4  &kp N        &kp M  &kp COMMA  &kp PERIOD  &kp SLASH
&kp LCTRL       &kp LCTRL  &kp LGUI  &kp LALT  &kp M  &kp SPACE  &kp N6  &lt 2 SPACE                                &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };
    };
};
